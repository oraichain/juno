// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: juno/clock/v1/type.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/x/bank/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UpdateParamsProposal struct {
	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Params      Params `protobuf:"bytes,3,opt,name=params,proto3" json:"params"`
}

func (m *UpdateParamsProposal) Reset()      { *m = UpdateParamsProposal{} }
func (*UpdateParamsProposal) ProtoMessage() {}
func (*UpdateParamsProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_b33703793a00ab21, []int{0}
}
func (m *UpdateParamsProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateParamsProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateParamsProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateParamsProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateParamsProposal.Merge(m, src)
}
func (m *UpdateParamsProposal) XXX_Size() int {
	return m.Size()
}
func (m *UpdateParamsProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateParamsProposal.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateParamsProposal proto.InternalMessageInfo

func init() {
	proto.RegisterType((*UpdateParamsProposal)(nil), "juno.clock.v1.UpdateParamsProposal")
}

func init() { proto.RegisterFile("juno/clock/v1/type.proto", fileDescriptor_b33703793a00ab21) }

var fileDescriptor_b33703793a00ab21 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xb1, 0x4e, 0xf3, 0x30,
	0x10, 0xc7, 0xed, 0xef, 0x83, 0x4a, 0xa4, 0xb0, 0x44, 0x45, 0x8a, 0x40, 0x72, 0x2a, 0xa6, 0x4e,
	0xb6, 0x4c, 0x17, 0xc4, 0xd8, 0x8e, 0x2c, 0x55, 0x25, 0x16, 0x36, 0xc7, 0xb5, 0x82, 0x69, 0xeb,
	0xb3, 0x62, 0x37, 0x82, 0x37, 0x60, 0x84, 0x8d, 0xb1, 0x8f, 0xd3, 0xb1, 0x23, 0x13, 0x42, 0xcd,
	0xc2, 0x63, 0xa0, 0x38, 0x11, 0x6a, 0xb7, 0xbb, 0xfb, 0x9d, 0xee, 0xf4, 0xfb, 0x47, 0xc9, 0xd3,
	0xca, 0x00, 0x93, 0x0b, 0x90, 0x73, 0x56, 0x72, 0xe6, 0x5f, 0xac, 0xa2, 0xb6, 0x00, 0x0f, 0xf1,
	0x59, 0x4d, 0x68, 0x20, 0xb4, 0xe4, 0x17, 0x44, 0x82, 0x5b, 0x82, 0x63, 0x99, 0x70, 0x8a, 0x95,
	0x3c, 0x53, 0x5e, 0x70, 0x26, 0x41, 0x9b, 0x66, 0x7d, 0x8f, 0x9b, 0xf9, 0x1f, 0xaf, 0x9b, 0x96,
	0xf7, 0x72, 0xc8, 0x21, 0x94, 0xac, 0xae, 0xda, 0xe9, 0xe5, 0xe1, 0xfb, 0x5c, 0x19, 0xe5, 0xb4,
	0x6b, 0xe0, 0xd5, 0x3b, 0x8e, 0x7a, 0xf7, 0x76, 0x26, 0xbc, 0x9a, 0x88, 0x42, 0x2c, 0xdd, 0xa4,
	0x00, 0x0b, 0x4e, 0x2c, 0xe2, 0x5e, 0x74, 0xec, 0xb5, 0x5f, 0xa8, 0x04, 0xf7, 0xf1, 0xe0, 0x64,
	0xda, 0x34, 0x71, 0x3f, 0xea, 0xce, 0x94, 0x93, 0x85, 0xb6, 0x5e, 0x83, 0x49, 0xfe, 0x05, 0xb6,
	0x3f, 0x8a, 0x87, 0x51, 0xc7, 0x86, 0x4b, 0xc9, 0xff, 0x3e, 0x1e, 0x74, 0xaf, 0xcf, 0xe9, 0x81,
	0x23, 0x6d, 0xde, 0x8c, 0x8e, 0x36, 0x5f, 0x29, 0x9a, 0xb6, 0xab, 0xb7, 0xa7, 0xaf, 0xeb, 0x14,
	0x7d, 0xac, 0x53, 0xf4, 0xb3, 0x4e, 0xd1, 0xe8, 0x6e, 0xb3, 0x23, 0x78, 0xbb, 0x23, 0xf8, 0x7b,
	0x47, 0xf0, 0x5b, 0x45, 0xd0, 0xb6, 0x22, 0xe8, 0xb3, 0x22, 0xe8, 0x81, 0xe7, 0xda, 0x3f, 0xae,
	0x32, 0x2a, 0x61, 0xc9, 0xc6, 0x21, 0x8b, 0x31, 0x18, 0x5f, 0x08, 0xe9, 0x1d, 0x0b, 0x96, 0x25,
	0xbf, 0x61, 0xcf, 0xad, 0x6b, 0x9d, 0xb3, 0xcb, 0x3a, 0xc1, 0x73, 0xf8, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0xf3, 0x2f, 0x91, 0xbd, 0x85, 0x01, 0x00, 0x00,
}

func (m *UpdateParamsProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateParamsProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateParamsProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintType(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintType(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintType(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintType(dAtA []byte, offset int, v uint64) int {
	offset -= sovType(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UpdateParamsProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovType(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovType(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovType(uint64(l))
	return n
}

func sovType(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozType(x uint64) (n int) {
	return sovType(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UpdateParamsProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowType
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateParamsProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateParamsProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowType
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthType
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthType
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowType
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthType
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthType
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowType
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthType
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthType
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipType(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthType
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipType(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowType
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowType
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowType
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthType
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupType
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthType
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthType        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowType          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupType = fmt.Errorf("proto: unexpected end of group")
)
